{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenHora","terminoBusqueda","e","target","name","value","Object","values","includes","async","resultado","fetch","json","forEach","$hora","addEventListener","seleccionarHora","buscarEventos","horaPrevia","classList","remove","add","dataset","horaId","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","filter","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CAEA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBAEAC,GADAR,SAAAC,cAAA,mBACAD,SAAAC,cAAA,qBAKA,SAAAQ,EAAAC,GACAR,EAAAQ,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MACAC,OAAAC,OAAAb,GAAAc,SAAA,KASAC,iBAEA,MAAAb,IAAAA,EAAAD,aAAAA,GAAAD,EAGAgB,QAAAC,MAFA,sDAGAD,EAAAE,OAOApB,SAAAO,iBAAA,aACAc,QAAAC,GAAAA,EAAAC,iBAAA,QAAAC,IAjBAC,GAoBA,SAAAD,EAAAd,GAGA,MAAAgB,EAAA1B,SAAAC,cAAA,8BACAyB,GACAA,EAAAC,UAAAC,OAAA,6BAIAlB,EAAAC,OAAAgB,UAAAE,IAAA,6BAEArB,EAAAK,MAAAH,EAAAC,OAAAmB,QAAAC,OA1CA1B,EAAAkB,iBAAA,SAAAd,GACAH,EAAAe,QAAAjB,GAAAA,EAAAmB,iBAAA,SAAAd,KAhBA,GCAA,WACA,MAAAuB,EAAAhC,SAAAC,cAAA,eAEA,GAAA+B,EAAA,CAEA,MAAAC,EAAAjC,SAAAC,cAAA,SACAiC,EAAAlC,SAAAC,cAAA,iBACA,IAAAkC,EAAA,GA2BA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAd,QAAAiB,IACA,MAAAC,EAAAvC,SAAAwC,cAAA,MACAD,EAAAZ,UAAAE,IAAA,mBACAU,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAGAK,IAGA,SAAAF,EAAAhC,GACAA,EAAAC,OAAAiB,SACAO,EAAAA,EAAAU,OAAAP,GAAAA,IAAA5B,EAAAC,OAAA0B,aACAO,IAGA,SAAAA,IACAV,EAAArB,MAAAsB,EAAAW,WA5CA,KAAAZ,EAAArB,QACAsB,EAAAD,EAAArB,MAAAkC,MAAA,KACAX,KAKAJ,EAAAT,iBAAA,YAEA,SAAAb,GACA,GAAA,KAAAA,EAAAsC,QAAA,CAEA,GAAA,KAAAtC,EAAAC,OAAAE,MAAAoC,QAAAvC,EAAAC,OAAAE,MAAA,EACA,OAGAH,EAAAwC,iBACAf,EAAA,IAAAA,EAAAzB,EAAAC,OAAAE,MAAAoC,QACAjB,EAAAnB,MAAA,GAEAuB,SA9BA","file":"bundle.js","sourcesContent":["(function () {\r\n  const horas = document.querySelector(\"#horas\");\r\n\r\n  if (horas) {\r\n\r\n    let busqueda = {\r\n        categoria_id: '',\r\n        dia: ''\r\n    }\r\n\r\n    const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n    const dias = document.querySelectorAll('[name=\"dia\"]');\r\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n    categoria.addEventListener('change', terminoBusqueda)\r\n    dias.forEach((dia) => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n    function terminoBusqueda(e) {\r\n        busqueda[e.target.name] = e.target.value\r\n        if(Object.values(busqueda).includes('')) {\r\n            return\r\n        }\r\n\r\n\r\n        \r\n        buscarEventos()\r\n    }\r\n\r\n    async function buscarEventos() {\r\n\r\n        const { dia, categoria_id } = busqueda\r\n        const url = `/api/eventos-horario?dia_id=1&categoria_id=1`\r\n\r\n        const resultado = await fetch(url)\r\n        const eventos = await resultado.json()\r\n\r\n        obtenerHorasDisponibles()\r\n\r\n    }\r\n\r\n    function obtenerHorasDisponibles() {\r\n        const horasDisponibles = document.querySelectorAll('#horas li')\r\n        horasDisponibles.forEach($hora => $hora.addEventListener('click', seleccionarHora))\r\n    }\r\n\r\n    function seleccionarHora(e) {\r\n\r\n        // Deshabilitar la hora previa, si hay un nuevo click\r\n        const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n        if(horaPrevia) {\r\n            horaPrevia.classList.remove('horas__hora--seleccionada')\r\n        }\r\n\r\n        // Agregar clase de seleccionado\r\n        e.target.classList.add('horas__hora--seleccionada')\r\n\r\n        inputHiddenHora.value = e.target.dataset.horaId\r\n    }\r\n  }\r\n})();\r\n","(function () {\r\n  const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n  if (tagsInput) {\r\n\r\n    const tagsDiv = document.querySelector('#tags')\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]')\r\n    let tags = [];\r\n\r\n    // Recuperar del input oculto\r\n    if(tagsInputHidden.value !== '') {\r\n     tags = tagsInputHidden.value.split(',')\r\n      mostrarTags()\r\n    }\r\n\r\n\r\n    // Escuchar los cambios en el input\r\n    tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n    function guardarTag(e) {\r\n      if (e.keyCode === 44) {\r\n\r\n        if(e.target.value.trim() === '' || e.target.value < 1) {\r\n            return\r\n        }\r\n\r\n        e.preventDefault();\r\n        tags = [...tags, e.target.value.trim()];\r\n        tagsInput.value = \"\";\r\n\r\n        mostrarTags()\r\n      }\r\n    }\r\n\r\n    function mostrarTags() {\r\n        tagsDiv.textContent = ''\r\n        tags.forEach(tag => {\r\n            const etiqueta = document.createElement('LI')\r\n            etiqueta.classList.add('formulario__tag')\r\n            etiqueta.textContent = tag\r\n            etiqueta.ondblclick = eliminarTag\r\n            tagsDiv.appendChild(etiqueta)\r\n        })\r\n\r\n        actualizarInputHidden()\r\n    }\r\n\r\n    function eliminarTag(e) {\r\n        e.target.remove()\r\n        tags = tags.filter(tag => tag !== e.target.textContent)\r\n        actualizarInputHidden()\r\n    }\r\n\r\n    function actualizarInputHidden() {\r\n        tagsInputHidden.value = tags.toString()\r\n    }\r\n  }\r\n})();\r\n"]}